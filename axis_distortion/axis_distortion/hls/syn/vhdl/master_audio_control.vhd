-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity master_audio_control is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    enable_distortion : IN STD_LOGIC_VECTOR (0 downto 0);
    enable_echo : IN STD_LOGIC_VECTOR (0 downto 0);
    enable_eq : IN STD_LOGIC_VECTOR (0 downto 0);
    hard_clip_level : IN STD_LOGIC_VECTOR (31 downto 0);
    gain_low : IN STD_LOGIC_VECTOR (31 downto 0);
    gain_mid : IN STD_LOGIC_VECTOR (31 downto 0);
    gain_high : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of master_audio_control is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "master_audio_control_master_audio_control,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=13.955000,HLS_SYN_LAT=50,HLS_SYN_TPT=20,HLS_SYN_MEM=96,HLS_SYN_DSP=0,HLS_SYN_FF=4609,HLS_SYN_LUT=5846,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv17_BB80 : STD_LOGIC_VECTOR (16 downto 0) := "01011101110000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv34_3FFFFFE66 : STD_LOGIC_VECTOR (33 downto 0) := "1111111111111111111111111001100110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv35_7FFFFFD99 : STD_LOGIC_VECTOR (34 downto 0) := "11111111111111111111111110110011001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv35_266 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000001001100110";
    constant ap_const_lv34_199 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000110011001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv22_1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_const_lv36_4CC : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000010011001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv23_1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_96 : STD_LOGIC_VECTOR (8 downto 0) := "010010110";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_19 : STD_LOGIC_VECTOR (8 downto 0) := "000011001";
    constant ap_const_lv9_18 : STD_LOGIC_VECTOR (8 downto 0) := "000011000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal delay_index : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal temp2_din : STD_LOGIC_VECTOR (24 downto 0);
    signal temp2_full_n : STD_LOGIC;
    signal temp2_write : STD_LOGIC;
    signal temp1_din : STD_LOGIC_VECTOR (24 downto 0);
    signal temp1_full_n : STD_LOGIC;
    signal temp1_write : STD_LOGIC;
    signal temp1_dout : STD_LOGIC_VECTOR (24 downto 0);
    signal temp1_empty_n : STD_LOGIC;
    signal temp1_read : STD_LOGIC;
    signal temp2_dout : STD_LOGIC_VECTOR (24 downto 0);
    signal temp2_empty_n : STD_LOGIC;
    signal temp2_read : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_grp6 : BOOLEAN;
    signal enable_eq_read_reg_2349 : STD_LOGIC_VECTOR (0 downto 0);
    signal enable_eq_read_reg_2349_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage10_subdone_grp6_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage10_subdone_grp6 : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11_grp7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_grp8 : BOOLEAN;
    signal enable_eq_read_reg_2349_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp0_done_reg : BOOLEAN := false;
    signal enable_echo_read_reg_2353 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state21_pp0_stage0_iter1_grp4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp4_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal enable_distortion_read_read_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal enable_distortion_read_reg_2357 : STD_LOGIC_VECTOR (0 downto 0);
    signal sample_in_data_fu_621_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sample_in_data_reg_2373 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal sample_in_last_reg_2378 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_1_fu_647_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal x_1_reg_2384 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln30_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln30_reg_2389 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_2_fu_671_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal x_2_reg_2394 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln28_fu_679_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln28_reg_2399 : STD_LOGIC_VECTOR (3 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_addr_reg_2404 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_addr_reg_2409 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_addr_reg_2414 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_addr_reg_2419 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_addr_reg_2424 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_addr_reg_2429 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_addr_reg_2434 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_addr_reg_2439 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_addr_reg_2444 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_addr_reg_2449 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_addr_reg_2454 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_addr_reg_2459 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_addr_reg_2464 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_addr_reg_2469 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_addr_reg_2474 : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_hls_stream_axis_sample_0_hls_stream_axis_sample_0_bool_delay_buffer_reg_2479 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal sext_ln31_fu_816_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage2_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal input_sample_last_reg_2504 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage2_iter0_grp3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_grp3 : BOOLEAN;
    signal sext_ln31_1_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_600_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gain_low_1_reg_2514 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage5_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage5_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal gain_low_1_reg_2514_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal gain_mid_1_reg_2524 : STD_LOGIC_VECTOR (31 downto 0);
    signal gain_mid_1_reg_2524_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i_i_reg_2529 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal gain_high_1_reg_2534 : STD_LOGIC_VECTOR (31 downto 0);
    signal gain_high_1_reg_2534_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_10_fu_846_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln27_10_reg_2539 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_block_pp0_stage9_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage9_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage9_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal tmp_49_cast_reg_2544 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln27_13_fu_862_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_13_reg_2551 : STD_LOGIC_VECTOR (11 downto 0);
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_3_load_reg_2556 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage10_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage10_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage10_subdone_grp0 : BOOLEAN;
    signal mul_ln27_8_fu_874_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln27_8_reg_2561 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_39_cast_reg_2566 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln27_10_fu_890_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_10_reg_2573 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln27_27_fu_918_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln27_27_reg_2578 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln27_10_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_10_reg_2583 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage11_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage11_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage11_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal grp_fu_611_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal trunc_ln142_fu_934_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln142_reg_2593 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal tmp_reg_2598 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_946_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_reg_2603 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln142_2_fu_962_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln142_2_reg_2608 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln142_2_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_2_reg_2614 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_3_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_3_reg_2619 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln142_3_fu_1010_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln142_3_reg_2624 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln142_1_fu_1014_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln142_1_reg_2629 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln142_4_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_4_reg_2634 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_value_fu_1129_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal output_value_reg_2639 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_load_reg_2644 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_2_fu_1183_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln27_2_reg_2649 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_19_cast_reg_2654 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln27_3_fu_1199_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_3_reg_2661 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln27_3_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_3_reg_2666 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln27_3_fu_1211_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln27_3_reg_2671 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_22_cast_reg_2676 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln27_4_fu_1227_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_4_reg_2683 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln27_6_fu_1291_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln27_6_reg_2688 : STD_LOGIC_VECTOR (21 downto 0);
    signal eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_load_reg_2693 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_6_fu_1315_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln27_6_reg_2698 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_36_cast_cast_reg_2703 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln27_8_fu_1331_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_8_reg_2710 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln27_8_fu_1335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_8_reg_2715 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal mul_ln27_7_fu_1343_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln27_7_reg_2720 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_36_cast_reg_2725 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln27_9_fu_1359_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_9_reg_2732 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln27_1_fu_1387_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln27_1_reg_2737 : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_11_cast_reg_2742 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln27_1_fu_1403_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_1_reg_2749 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln27_16_fu_1457_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln27_16_reg_2754 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln27_15_fu_1525_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln27_15_reg_2759 : STD_LOGIC_VECTOR (22 downto 0);
    signal input_sample_data_2_fu_1531_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal input_sample_data_2_reg_2764 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage5_11001_grp5 : BOOLEAN;
    signal input_sample_last_1_reg_2770 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_sample_last_1_reg_2770_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_1_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_1_reg_2776 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln27_5_fu_1584_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln27_5_reg_2781 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_29_cast_cast_reg_2786 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln27_6_fu_1600_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_6_reg_2793 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln27_21_fu_1654_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln27_21_reg_2798 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln27_fu_1668_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln27_reg_2803 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln27_5_fu_1756_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln27_5_reg_2808 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln27_6_fu_1762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_6_reg_2813 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_14_fu_1872_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln27_14_reg_2818 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln27_22_fu_1907_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln27_22_reg_2823 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln65_fu_1913_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln27_25_fu_2014_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln27_25_reg_2833 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal mul_ln27_9_fu_2026_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln27_9_reg_2838 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_46_cast_fu_2032_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_46_cast_reg_2843 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln27_12_fu_2046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_12_reg_2849 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_20_fu_2052_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln27_20_reg_2854 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln65_1_fu_2058_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln65_2_fu_2117_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_086_fu_2130_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state31_pp0_stage10_iter1_grp6 : BOOLEAN;
    signal ap_block_state51_pp0_stage10_iter2_grp6 : BOOLEAN;
    signal ap_block_pp0_stage10_11001_grp6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal grp_fu_595_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i23_i_reg_2889 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal mul_i_i1_reg_2899 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal grp_fu_590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln143_fu_2139_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln143_reg_2909 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_23_reg_2914 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_2151_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_reg_2919 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln143_1_cast_fu_2167_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln143_1_cast_reg_2924 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln143_2_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_2_reg_2930 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln143_fu_2207_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln143_reg_2935 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln143_1_fu_2215_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln143_1_reg_2940 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln143_4_fu_2221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_4_reg_2945 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln70_fu_2339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state50_pp0_stage9_iter2_grp8 : BOOLEAN;
    signal ap_block_pp0_stage9_11001_grp8 : BOOLEAN;
    signal regslice_both_out_r_U_apdone_blk : STD_LOGIC;
    signal zext_ln28_fu_693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_719_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_sig_allocacmp_delay_index_load : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0_grp0 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage2_grp0 : BOOLEAN;
    signal ap_block_pp0_stage5_grp5 : BOOLEAN;
    signal ap_block_pp0_stage9_grp0 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage10_grp0 : BOOLEAN;
    signal p_1_fu_725_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_block_state2_pp0_stage1_iter0_grp2 : BOOLEAN;
    signal ap_block_pp0_stage1_01001_grp2 : BOOLEAN;
    signal p_s_fu_737_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_block_pp0_stage1_11001_grp2 : BOOLEAN;
    signal ap_block_pp0_stage2_01001_grp3 : BOOLEAN;
    signal p_2_fu_1158_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_block_pp0_stage0_01001_grp4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp4 : BOOLEAN;
    signal ap_block_pp0_stage10_01001_grp6 : BOOLEAN;
    signal ap_block_pp0_stage9_01001_grp8 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_we0_local : STD_LOGIC;
    signal ap_predicate_pred1064_state20 : BOOLEAN;
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_we0_local : STD_LOGIC;
    signal ap_predicate_pred1085_state20 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_we0_local : STD_LOGIC;
    signal ap_predicate_pred1101_state20 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_we0_local : STD_LOGIC;
    signal ap_predicate_pred1117_state20 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_we0_local : STD_LOGIC;
    signal ap_predicate_pred1133_state20 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_we0_local : STD_LOGIC;
    signal ap_predicate_pred1149_state20 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_we0_local : STD_LOGIC;
    signal ap_predicate_pred1165_state20 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_we0_local : STD_LOGIC;
    signal ap_predicate_pred1181_state20 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_we0_local : STD_LOGIC;
    signal ap_predicate_pred1197_state20 : BOOLEAN;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_ce0_local : STD_LOGIC;
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_we0_local : STD_LOGIC;
    signal ap_predicate_pred1213_state20 : BOOLEAN;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_ce0_local : STD_LOGIC;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_we0_local : STD_LOGIC;
    signal ap_predicate_pred1229_state20 : BOOLEAN;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_ce0_local : STD_LOGIC;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_we0_local : STD_LOGIC;
    signal ap_predicate_pred1245_state20 : BOOLEAN;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_ce0_local : STD_LOGIC;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_we0_local : STD_LOGIC;
    signal ap_predicate_pred1261_state20 : BOOLEAN;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_ce0_local : STD_LOGIC;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_we0_local : STD_LOGIC;
    signal ap_predicate_pred1277_state20 : BOOLEAN;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_ce0_local : STD_LOGIC;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_we0_local : STD_LOGIC;
    signal ap_predicate_pred1293_state20 : BOOLEAN;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_ce0_local : STD_LOGIC;
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_address0_local : STD_LOGIC_VECTOR (11 downto 0);
    signal p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_we0_local : STD_LOGIC;
    signal ap_predicate_pred1309_state20 : BOOLEAN;
    signal grp_fu_590_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal grp_fu_595_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal grp_fu_600_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_grp0 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal grp_fu_617_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_grp3 : BOOLEAN;
    signal sext_ln29_fu_633_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln29_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln29_fu_643_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln30_fu_661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln30_fu_655_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_fu_683_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_719_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage1_grp2 : BOOLEAN;
    signal x_fu_732_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal delayed_sample_fu_745_p33 : STD_LOGIC_VECTOR (23 downto 0);
    signal delayed_sample_fu_745_p35 : STD_LOGIC_VECTOR (23 downto 0);
    signal input_sample_data_fu_821_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln27_20_fu_842_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_10_fu_846_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln27_15_fu_870_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_8_fu_874_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln27_13_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_21_fu_906_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_22_fu_894_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_14_fu_911_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage11_grp0 : BOOLEAN;
    signal grp_fu_607_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal bitcast_ln716_fu_930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln142_1_fu_958_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln142_1_cast_fu_966_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln142_fu_954_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln142_fu_978_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln142_fu_996_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln142_1_fu_974_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln142_2_fu_1000_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln142_fu_1004_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln142_2_fu_1042_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln142_2cast_fu_1045_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln142_fu_1049_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln142_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_1_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln142_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln142_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln142_1_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln142_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln142_1_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_1100_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_fu_1100_p8 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_fu_1100_p9 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_fu_1100_p10 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1100_p11 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln142_2_fu_1123_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_grp4 : BOOLEAN;
    signal sext_ln27_4_fu_1179_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_2_fu_1183_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln27_3_fu_1211_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln27_3_fu_1238_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_7_fu_1231_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_3_fu_1243_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln27_4_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_4_fu_1268_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_9_fu_1256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_4_fu_1273_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln27_18_fu_1280_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln27_17_fu_1249_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln27_6_fu_1287_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln27_12_fu_1311_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_6_fu_1315_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal mul_ln27_7_fu_1343_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln27_2_fu_1383_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_1_fu_1387_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln27_2_fu_1425_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1429_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_1407_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln27_2_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_2_fu_1443_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_6_fu_1417_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_2_fu_1449_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln27_12_fu_1472_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_15_fu_1465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_8_fu_1477_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln27_9_fu_1497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_13_fu_1502_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_16_fu_1490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_9_fu_1507_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln27_23_fu_1514_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln27_22_fu_1483_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln27_14_fu_1521_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_block_pp0_stage5_grp0 : BOOLEAN;
    signal sext_ln27_10_fu_1580_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_5_fu_1584_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln27_7_fu_1622_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1626_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_1604_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln27_7_fu_1634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_11_fu_1640_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_13_fu_1614_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_7_fu_1646_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln27_fu_1671_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln27_fu_1671_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln27_fu_1695_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_cast_fu_1677_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln27_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_fu_1705_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_2_fu_1687_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_fu_1711_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln27_10_fu_1719_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln27_1_fu_1738_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_1731_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_1_fu_1743_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln27_15_fu_1749_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln27_1_fu_1727_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln27_8_fu_1773_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln27_3_fu_1767_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln27_7_fu_1776_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln27_7_fu_1770_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_4_fu_1788_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_4_fu_1788_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln27_4_fu_1788_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln27_5_fu_1811_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_25_cast_fu_1793_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln27_5_fu_1815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_9_fu_1821_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_10_fu_1803_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_5_fu_1827_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln27_19_fu_1835_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln27_10_fu_1854_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_fu_1847_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_6_fu_1859_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln27_20_fu_1865_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln27_9_fu_1843_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln27_18_fu_1885_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_17_fu_1878_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_11_fu_1890_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln27_24_fu_1896_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln27_21_fu_1903_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal acc_fu_1782_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln27_19_fu_1924_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln27_11_fu_1918_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln27_16_fu_1927_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln27_16_fu_1921_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln27_11_fu_1982_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1986_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_1964_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln27_11_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_19_fu_2000_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_19_fu_1974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_12_fu_2006_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln27_18_fu_2022_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln27_9_fu_2026_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln27_12_fu_2042_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal acc_1_fu_1933_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_21_fu_2066_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_13_fu_2073_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln27_26_fu_2078_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln27_22_fu_2085_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln27_23_fu_2089_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln27_23_fu_2095_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln27_25_fu_2101_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln27_17_fu_2063_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln27_24_fu_2105_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln27_24_fu_2092_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_2_fu_2111_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_fu_2122_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal bitcast_ln725_fu_2135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln143_1_fu_2163_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln143_fu_2159_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln143_fu_2175_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln143_fu_2181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln143cast_fu_2197_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln143_3_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln143_fu_2201_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln143_2_fu_2237_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln143_2cast_fu_2240_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln143_fu_2244_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln143_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_1_fu_2232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln143_fu_2256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_fu_2268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln143_1_fu_2274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_fu_2262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_1_fu_2280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_2295_p8 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_25_fu_2295_p9 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_25_fu_2295_p10 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_2295_p11 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln143_2_fu_2317_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal processed_sample_fu_2323_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_26_fu_2330_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_590_ce : STD_LOGIC;
    signal grp_fu_595_ce : STD_LOGIC;
    signal grp_fu_600_ce : STD_LOGIC;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal grp_fu_607_ce : STD_LOGIC;
    signal grp_fu_611_ce : STD_LOGIC;
    signal grp_fu_617_ce : STD_LOGIC;
    signal grp_fu_719_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state32_pp0_stage11_iter1_grp7 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_in_r_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal in_r_TVALID_int_regslice : STD_LOGIC;
    signal in_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_r_U_ack_in : STD_LOGIC;
    signal out_r_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_U_vld_out : STD_LOGIC;
    signal ap_condition_995 : BOOLEAN;
    signal delayed_sample_fu_745_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p29 : STD_LOGIC_VECTOR (3 downto 0);
    signal delayed_sample_fu_745_p31 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_1100_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1100_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1100_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1100_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_2295_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_2295_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_2295_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_2295_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component master_audio_control_fadd_32ns_32ns_32_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component master_audio_control_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component master_audio_control_sitofp_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component master_audio_control_dadd_64ns_64ns_64_7_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component master_audio_control_dmul_64ns_64ns_64_7_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component master_audio_control_sitodp_32s_64_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component master_audio_control_srem_17ns_17ns_17_21_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component master_audio_control_sparsemux_33_4_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (3 downto 0);
        din15_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        din3 : IN STD_LOGIC_VECTOR (23 downto 0);
        din4 : IN STD_LOGIC_VECTOR (23 downto 0);
        din5 : IN STD_LOGIC_VECTOR (23 downto 0);
        din6 : IN STD_LOGIC_VECTOR (23 downto 0);
        din7 : IN STD_LOGIC_VECTOR (23 downto 0);
        din8 : IN STD_LOGIC_VECTOR (23 downto 0);
        din9 : IN STD_LOGIC_VECTOR (23 downto 0);
        din10 : IN STD_LOGIC_VECTOR (23 downto 0);
        din11 : IN STD_LOGIC_VECTOR (23 downto 0);
        din12 : IN STD_LOGIC_VECTOR (23 downto 0);
        din13 : IN STD_LOGIC_VECTOR (23 downto 0);
        din14 : IN STD_LOGIC_VECTOR (23 downto 0);
        din15 : IN STD_LOGIC_VECTOR (23 downto 0);
        def : IN STD_LOGIC_VECTOR (23 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component master_audio_control_mul_24s_10s_34_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component master_audio_control_mul_24s_11s_35_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component master_audio_control_sparsemux_9_3_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        din3 : IN STD_LOGIC_VECTOR (23 downto 0);
        def : IN STD_LOGIC_VECTOR (23 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component master_audio_control_mul_24s_11ns_35_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component master_audio_control_mul_24s_10ns_34_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component master_audio_control_mul_24s_12ns_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component master_audio_control_fifo_w25_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (24 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (24 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component master_audio_control_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_q0);

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_address0_local,
        ce0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_ce0_local,
        we0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_q0);

    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_address0_local,
        ce0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_ce0_local,
        we0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_q0);

    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_address0_local,
        ce0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_ce0_local,
        we0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_q0);

    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_address0_local,
        ce0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_ce0_local,
        we0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_q0);

    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_address0_local,
        ce0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_ce0_local,
        we0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_q0);

    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_address0_local,
        ce0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_ce0_local,
        we0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_q0);

    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_U : component master_audio_control_echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 3000,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_address0_local,
        ce0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_ce0_local,
        we0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_we0_local,
        d0 => output_value_fu_1129_p3,
        q0 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_q0);

    fadd_32ns_32ns_32_7_full_dsp_1_U1 : component master_audio_control_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_590_p0,
        din1 => grp_fu_590_p1,
        ce => grp_fu_590_ce,
        dout => grp_fu_590_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U2 : component master_audio_control_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_600_p1,
        din1 => grp_fu_595_p1,
        ce => grp_fu_595_ce,
        dout => grp_fu_595_p2);

    sitofp_32ns_32_6_no_dsp_1_U3 : component master_audio_control_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_600_p0,
        ce => grp_fu_600_ce,
        dout => grp_fu_600_p1);

    dadd_64ns_64ns_64_7_no_dsp_1_U4 : component master_audio_control_dadd_64ns_64ns_64_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => conv_i_i_reg_2529,
        din1 => grp_fu_611_p2,
        ce => grp_fu_607_ce,
        dout => grp_fu_607_p2);

    dmul_64ns_64ns_64_7_max_dsp_1_U5 : component master_audio_control_dmul_64ns_64ns_64_7_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_617_p1,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => grp_fu_611_ce,
        dout => grp_fu_611_p2);

    sitodp_32s_64_6_no_dsp_1_U6 : component master_audio_control_sitodp_32s_64_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_617_p0,
        ce => grp_fu_617_ce,
        dout => grp_fu_617_p1);

    srem_17ns_17ns_17_21_1_U7 : component master_audio_control_srem_17ns_17ns_17_21_1
    generic map (
        ID => 1,
        NUM_STAGE => 21,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_719_p0,
        din1 => ap_const_lv17_BB80,
        ce => grp_fu_719_ce,
        dout => grp_fu_719_p2);

    sparsemux_33_4_24_1_1_U8 : component master_audio_control_sparsemux_33_4_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 24,
        CASE1 => "0001",
        din1_WIDTH => 24,
        CASE2 => "0010",
        din2_WIDTH => 24,
        CASE3 => "0011",
        din3_WIDTH => 24,
        CASE4 => "0100",
        din4_WIDTH => 24,
        CASE5 => "0101",
        din5_WIDTH => 24,
        CASE6 => "0110",
        din6_WIDTH => 24,
        CASE7 => "0111",
        din7_WIDTH => 24,
        CASE8 => "1000",
        din8_WIDTH => 24,
        CASE9 => "1001",
        din9_WIDTH => 24,
        CASE10 => "1010",
        din10_WIDTH => 24,
        CASE11 => "1011",
        din11_WIDTH => 24,
        CASE12 => "1100",
        din12_WIDTH => 24,
        CASE13 => "1101",
        din13_WIDTH => 24,
        CASE14 => "1110",
        din14_WIDTH => 24,
        CASE15 => "1111",
        din15_WIDTH => 24,
        def_WIDTH => 24,
        sel_WIDTH => 4,
        dout_WIDTH => 24)
    port map (
        din0 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_q0,
        din1 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_q0,
        din2 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_q0,
        din3 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_q0,
        din4 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_q0,
        din5 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_q0,
        din6 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_q0,
        din7 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_q0,
        din8 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_q0,
        din9 => echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_q0,
        din10 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_q0,
        din11 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_q0,
        din12 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_q0,
        din13 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_q0,
        din14 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_q0,
        din15 => p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_q0,
        def => delayed_sample_fu_745_p33,
        sel => trunc_ln28_reg_2399,
        dout => delayed_sample_fu_745_p35);

    mul_24s_10s_34_1_1_U9 : component master_audio_control_mul_24s_10s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 10,
        dout_WIDTH => 34)
    port map (
        din0 => sext_ln27_20_fu_842_p0,
        din1 => mul_ln27_10_fu_846_p1,
        dout => mul_ln27_10_fu_846_p2);

    mul_24s_11s_35_1_1_U10 : component master_audio_control_mul_24s_11s_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 11,
        dout_WIDTH => 35)
    port map (
        din0 => sext_ln27_15_fu_870_p0,
        din1 => mul_ln27_8_fu_874_p1,
        dout => mul_ln27_8_fu_874_p2);

    sparsemux_9_3_24_1_1_U11 : component master_audio_control_sparsemux_9_3_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100",
        din0_WIDTH => 24,
        CASE1 => "010",
        din1_WIDTH => 24,
        CASE2 => "001",
        din2_WIDTH => 24,
        CASE3 => "000",
        din3_WIDTH => 24,
        def_WIDTH => 24,
        sel_WIDTH => 3,
        dout_WIDTH => 24)
    port map (
        din0 => ap_const_lv24_0,
        din1 => trunc_ln142_2_reg_2608,
        din2 => tmp_3_fu_1100_p6,
        din3 => tmp_3_fu_1100_p8,
        def => tmp_3_fu_1100_p9,
        sel => tmp_3_fu_1100_p10,
        dout => tmp_3_fu_1100_p11);

    mul_24s_11ns_35_1_1_U12 : component master_audio_control_mul_24s_11ns_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 11,
        dout_WIDTH => 35)
    port map (
        din0 => sext_ln27_4_fu_1179_p0,
        din1 => mul_ln27_2_fu_1183_p1,
        dout => mul_ln27_2_fu_1183_p2);

    mul_24s_10ns_34_1_1_U13 : component master_audio_control_mul_24s_10ns_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 10,
        dout_WIDTH => 34)
    port map (
        din0 => eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_load_reg_2644,
        din1 => mul_ln27_3_fu_1211_p1,
        dout => mul_ln27_3_fu_1211_p2);

    mul_24s_12ns_36_1_1_U14 : component master_audio_control_mul_24s_12ns_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 12,
        dout_WIDTH => 36)
    port map (
        din0 => sext_ln27_12_fu_1311_p0,
        din1 => mul_ln27_6_fu_1315_p1,
        dout => mul_ln27_6_fu_1315_p2);

    mul_24s_10s_34_1_1_U15 : component master_audio_control_mul_24s_10s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 10,
        dout_WIDTH => 34)
    port map (
        din0 => eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_load_reg_2693,
        din1 => mul_ln27_7_fu_1343_p1,
        dout => mul_ln27_7_fu_1343_p2);

    mul_24s_11ns_35_1_1_U16 : component master_audio_control_mul_24s_11ns_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 11,
        dout_WIDTH => 35)
    port map (
        din0 => sext_ln27_2_fu_1383_p0,
        din1 => mul_ln27_1_fu_1387_p1,
        dout => mul_ln27_1_fu_1387_p2);

    mul_24s_12ns_36_1_1_U17 : component master_audio_control_mul_24s_12ns_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 12,
        dout_WIDTH => 36)
    port map (
        din0 => sext_ln27_10_fu_1580_p0,
        din1 => mul_ln27_5_fu_1584_p1,
        dout => mul_ln27_5_fu_1584_p2);

    mul_24s_10ns_34_1_1_U18 : component master_audio_control_mul_24s_10ns_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 10,
        dout_WIDTH => 34)
    port map (
        din0 => input_sample_data_2_reg_2764,
        din1 => mul_ln27_fu_1671_p1,
        dout => mul_ln27_fu_1671_p2);

    mul_24s_10s_34_1_1_U19 : component master_audio_control_mul_24s_10s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 10,
        dout_WIDTH => 34)
    port map (
        din0 => mul_ln27_4_fu_1788_p0,
        din1 => mul_ln27_4_fu_1788_p1,
        dout => mul_ln27_4_fu_1788_p2);

    mul_24s_11s_35_1_1_U20 : component master_audio_control_mul_24s_11s_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 11,
        dout_WIDTH => 35)
    port map (
        din0 => sext_ln27_18_fu_2022_p0,
        din1 => mul_ln27_9_fu_2026_p1,
        dout => mul_ln27_9_fu_2026_p2);

    sparsemux_9_3_24_1_1_U21 : component master_audio_control_sparsemux_9_3_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100",
        din0_WIDTH => 24,
        CASE1 => "010",
        din1_WIDTH => 24,
        CASE2 => "001",
        din2_WIDTH => 24,
        CASE3 => "000",
        din3_WIDTH => 24,
        def_WIDTH => 24,
        sel_WIDTH => 3,
        dout_WIDTH => 24)
    port map (
        din0 => ap_const_lv24_0,
        din1 => zext_ln143_1_cast_reg_2924,
        din2 => select_ln143_reg_2935,
        din3 => tmp_25_fu_2295_p8,
        def => tmp_25_fu_2295_p9,
        sel => tmp_25_fu_2295_p10,
        dout => tmp_25_fu_2295_p11);

    temp1_fifo_U : component master_audio_control_fifo_w25_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => temp1_din,
        if_full_n => temp1_full_n,
        if_write => temp1_write,
        if_dout => temp1_dout,
        if_empty_n => temp1_empty_n,
        if_read => temp1_read);

    temp2_fifo_U : component master_audio_control_fifo_w25_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => temp2_din,
        if_full_n => temp2_full_n,
        if_write => temp2_write,
        if_dout => temp2_dout,
        if_empty_n => temp2_empty_n,
        if_read => temp2_read);

    regslice_both_in_r_U : component master_audio_control_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_r_U_ack_in,
        data_out => in_r_TDATA_int_regslice,
        vld_out => in_r_TVALID_int_regslice,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_r_U_apdone_blk);

    regslice_both_out_r_U : component master_audio_control_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_r_TDATA_int_regslice,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp0_done_reg_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= ap_const_boolean_0;
            else
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp1_done_reg_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= ap_const_boolean_0;
            else
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1)) then 
                        ap_block_pp0_stage0_subdone_grp1_done_reg_iter0 <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp4_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage0_subdone_grp4_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp4_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4)) then 
                        ap_block_pp0_stage0_subdone_grp4_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage10_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage10_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then 
                        ap_block_pp0_stage10_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp0)) then 
                        ap_block_pp0_stage10_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage10_subdone_grp6_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage10_subdone_grp6_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then 
                        ap_block_pp0_stage10_subdone_grp6_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6)) then 
                        ap_block_pp0_stage10_subdone_grp6_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage11_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage11_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then 
                        ap_block_pp0_stage11_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone_grp0)) then 
                        ap_block_pp0_stage11_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage2_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then 
                        ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0)) then 
                        ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage5_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage5_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then 
                        ap_block_pp0_stage5_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone_grp0)) then 
                        ap_block_pp0_stage5_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage9_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_block_pp0_stage9_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then 
                        ap_block_pp0_stage9_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone_grp0)) then 
                        ap_block_pp0_stage9_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage19_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage19_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln27_14_reg_2818 <= add_ln27_14_fu_1872_p2;
                add_ln27_22_reg_2823 <= add_ln27_22_fu_1907_p2;
                gain_high_1_reg_2534_pp0_iter1_reg <= gain_high_1_reg_2534;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln27_15_reg_2759 <= add_ln27_15_fu_1525_p2;
                mul_ln27_1_reg_2737 <= mul_ln27_1_fu_1387_p2;
                select_ln27_16_reg_2754 <= select_ln27_16_fu_1457_p3;
                tmp_11_cast_reg_2742 <= mul_ln27_1_fu_1387_p2(33 downto 12);
                trunc_ln27_1_reg_2749 <= trunc_ln27_1_fu_1403_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                add_ln27_20_reg_2854 <= add_ln27_20_fu_2052_p2;
                icmp_ln143_2_reg_2930 <= icmp_ln143_2_fu_2185_p2;
                icmp_ln143_4_reg_2945 <= icmp_ln143_4_fu_2221_p2;
                icmp_ln27_12_reg_2849 <= icmp_ln27_12_fu_2046_p2;
                mul_ln27_9_reg_2838 <= mul_ln27_9_fu_2026_p2;
                select_ln143_reg_2935 <= select_ln143_fu_2207_p3;
                select_ln27_25_reg_2833 <= select_ln27_25_fu_2014_p3;
                sub_ln143_1_reg_2940 <= sub_ln143_1_fu_2215_p2;
                tmp_23_reg_2914 <= bitcast_ln725_fu_2135_p1(31 downto 31);
                tmp_24_reg_2919 <= bitcast_ln725_fu_2135_p1(30 downto 23);
                tmp_46_cast_reg_2843 <= mul_ln27_9_fu_2026_p2(33 downto 12);
                trunc_ln143_reg_2909 <= trunc_ln143_fu_2139_p1;
                    zext_ln143_1_cast_reg_2924(22 downto 0) <= zext_ln143_1_cast_fu_2167_p3(22 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                add_ln27_5_reg_2808 <= add_ln27_5_fu_1756_p2;
                gain_mid_1_reg_2524_pp0_iter1_reg <= gain_mid_1_reg_2524;
                icmp_ln27_6_reg_2813 <= icmp_ln27_6_fu_1762_p2;
                sext_ln27_reg_2803 <= sext_ln27_fu_1668_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln27_6_reg_2688 <= add_ln27_6_fu_1291_p2;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_load_reg_2693 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid;
                mul_ln27_6_reg_2698 <= mul_ln27_6_fu_1315_p2;
                tmp_36_cast_cast_reg_2703 <= mul_ln27_6_fu_1315_p2(34 downto 12);
                trunc_ln27_8_reg_2710 <= trunc_ln27_8_fu_1331_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then
                    ap_predicate_pred1064_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_0) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1085_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_1) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1101_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_2) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1117_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_3) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1133_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_4) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1149_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_5) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1165_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_6) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1181_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_7) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1197_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_8) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1213_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_9) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1229_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_A) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1245_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_B) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1261_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_C) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1277_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_D) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1293_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_E) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                    ap_predicate_pred1309_state20 <= ((trunc_ln28_reg_2399 = ap_const_lv4_F) and (enable_echo_read_reg_2353 = ap_const_lv1_1));
                icmp_ln142_2_reg_2614 <= icmp_ln142_2_fu_984_p2;
                icmp_ln142_3_reg_2619 <= icmp_ln142_3_fu_990_p2;
                icmp_ln142_4_reg_2634 <= icmp_ln142_4_fu_1020_p2;
                sub_ln142_1_reg_2629 <= sub_ln142_1_fu_1014_p2;
                tmp_8_reg_2603 <= bitcast_ln716_fu_930_p1(62 downto 52);
                tmp_reg_2598 <= bitcast_ln716_fu_930_p1(63 downto 63);
                trunc_ln142_2_reg_2608 <= trunc_ln142_2_fu_962_p1;
                trunc_ln142_3_reg_2624 <= trunc_ln142_3_fu_1010_p1;
                trunc_ln142_reg_2593 <= trunc_ln142_fu_934_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                conv_i_i_reg_2529 <= grp_fu_617_p1;
                gain_high_1_reg_2534 <= grp_fu_600_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_echo_read_reg_2353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                delay_index <= grp_fu_719_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                echo_hls_stream_axis_sample_0_hls_stream_axis_sample_0_bool_delay_buffer_reg_2479 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_addr_reg_2409 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_addr_reg_2414 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_addr_reg_2419 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_addr_reg_2424 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_addr_reg_2429 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_addr_reg_2434 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_addr_reg_2439 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_addr_reg_2444 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_addr_reg_2449 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_addr_reg_2404 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                enable_echo_read_reg_2353 <= enable_echo;
                p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_addr_reg_2454 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_addr_reg_2459 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_addr_reg_2464 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_addr_reg_2469 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_addr_reg_2474 <= zext_ln28_fu_693_p1(12 - 1 downto 0);
                trunc_ln28_reg_2399 <= trunc_ln28_fu_679_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                enable_distortion_read_reg_2357 <= enable_distortion;
                enable_eq_read_reg_2349 <= enable_eq;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                enable_eq_read_reg_2349_pp0_iter1_reg <= enable_eq_read_reg_2349;
                enable_eq_read_reg_2349_pp0_iter2_reg <= enable_eq_read_reg_2349_pp0_iter1_reg;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_load_reg_2644 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low;
                mul_ln27_2_reg_2649 <= mul_ln27_2_fu_1183_p2;
                tmp_19_cast_reg_2654 <= mul_ln27_2_fu_1183_p2(33 downto 12);
                trunc_ln27_3_reg_2661 <= trunc_ln27_3_fu_1199_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_3_load_reg_2556;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_1 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_2;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_2 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_3 <= input_sample_data_2_fu_1531_p1;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_3 <= input_sample_data_2_fu_1531_p1;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_1 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_2;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_2 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_3;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_3 <= input_sample_data_2_fu_1531_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_3_load_reg_2556 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_3;
                mul_ln27_8_reg_2561 <= mul_ln27_8_fu_874_p2;
                select_ln27_27_reg_2578 <= select_ln27_27_fu_918_p3;
                tmp_39_cast_reg_2566 <= mul_ln27_8_fu_874_p2(33 downto 12);
                trunc_ln27_10_reg_2573 <= trunc_ln27_10_fu_890_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_1 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_2;
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_2 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                gain_low_1_reg_2514 <= grp_fu_600_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                gain_low_1_reg_2514_pp0_iter1_reg <= gain_low_1_reg_2514;
                icmp_ln27_1_reg_2776 <= icmp_ln27_1_fu_1549_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                gain_mid_1_reg_2524 <= grp_fu_600_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then
                icmp_ln27_10_reg_2583 <= icmp_ln27_10_fu_925_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln27_3_reg_2666 <= icmp_ln27_3_fu_1203_p2;
                mul_ln27_3_reg_2671 <= mul_ln27_3_fu_1211_p2;
                tmp_22_cast_reg_2676 <= mul_ln27_3_fu_1211_p2(32 downto 12);
                trunc_ln27_4_reg_2683 <= trunc_ln27_4_fu_1227_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln27_8_reg_2715 <= icmp_ln27_8_fu_1335_p2;
                mul_ln27_7_reg_2720 <= mul_ln27_7_fu_1343_p2;
                tmp_36_cast_reg_2725 <= mul_ln27_7_fu_1343_p2(32 downto 12);
                trunc_ln27_9_reg_2732 <= trunc_ln27_9_fu_1359_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln30_reg_2389 <= icmp_ln30_fu_665_p2;
                sample_in_data_reg_2373 <= sample_in_data_fu_621_p1;
                sample_in_last_reg_2378 <= in_r_TDATA_int_regslice(32 downto 32);
                x_1_reg_2384 <= x_1_fu_647_p3;
                x_2_reg_2394 <= x_2_fu_671_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                input_sample_data_2_reg_2764 <= input_sample_data_2_fu_1531_p1;
                input_sample_last_1_reg_2770 <= temp2_dout(24 downto 24);
                input_sample_last_1_reg_2770_pp0_iter2_reg <= input_sample_last_1_reg_2770;
                mul_ln27_5_reg_2781 <= mul_ln27_5_fu_1584_p2;
                select_ln27_21_reg_2798 <= select_ln27_21_fu_1654_p3;
                tmp_29_cast_cast_reg_2786 <= mul_ln27_5_fu_1584_p2(34 downto 12);
                trunc_ln27_6_reg_2793 <= trunc_ln27_6_fu_1600_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                input_sample_last_reg_2504 <= temp1_dout(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then
                mul_i23_i_reg_2889 <= grp_fu_595_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then
                mul_i_i1_reg_2899 <= grp_fu_595_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                mul_ln27_10_reg_2539 <= mul_ln27_10_fu_846_p2;
                tmp_49_cast_reg_2544 <= mul_ln27_10_fu_846_p2(32 downto 12);
                trunc_ln27_13_reg_2551 <= trunc_ln27_13_fu_862_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then
                output_value_reg_2639 <= output_value_fu_1129_p3;
            end if;
        end if;
    end process;
    zext_ln143_1_cast_reg_2924(23) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage19_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage11_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_reset_idle_pp0, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    acc_1_fu_1933_p2 <= std_logic_vector(unsigned(add_ln27_16_fu_1927_p2) + unsigned(sext_ln27_16_fu_1921_p1));
    acc_2_fu_2111_p2 <= std_logic_vector(unsigned(add_ln27_24_fu_2105_p2) + unsigned(sext_ln27_24_fu_2092_p1));
    acc_fu_1782_p2 <= std_logic_vector(unsigned(add_ln27_7_fu_1776_p2) + unsigned(sext_ln27_7_fu_1770_p1));
    add_ln27_10_fu_1854_p2 <= std_logic_vector(unsigned(tmp_29_cast_cast_reg_2786) + unsigned(ap_const_lv23_1));
    add_ln27_11_fu_1640_p2 <= std_logic_vector(unsigned(tmp_12_fu_1604_p4) + unsigned(ap_const_lv23_1));
    add_ln27_12_fu_1472_p2 <= std_logic_vector(unsigned(tmp_36_cast_cast_reg_2703) + unsigned(ap_const_lv23_1));
    add_ln27_13_fu_1502_p2 <= std_logic_vector(unsigned(tmp_36_cast_reg_2725) + unsigned(ap_const_lv21_1));
    add_ln27_14_fu_1872_p2 <= std_logic_vector(unsigned(select_ln27_20_fu_1865_p3) + unsigned(sext_ln27_9_fu_1843_p1));
    add_ln27_15_fu_1525_p2 <= std_logic_vector(unsigned(select_ln27_22_fu_1483_p3) + unsigned(sext_ln27_14_fu_1521_p1));
    add_ln27_16_fu_1927_p2 <= std_logic_vector(signed(sext_ln27_19_fu_1924_p1) + signed(sext_ln27_11_fu_1918_p1));
    add_ln27_18_fu_1885_p2 <= std_logic_vector(unsigned(tmp_39_cast_reg_2566) + unsigned(ap_const_lv22_1));
    add_ln27_19_fu_2000_p2 <= std_logic_vector(unsigned(tmp_18_fu_1964_p4) + unsigned(ap_const_lv23_1));
    add_ln27_1_fu_1738_p2 <= std_logic_vector(unsigned(tmp_11_cast_reg_2742) + unsigned(ap_const_lv22_1));
    add_ln27_20_fu_2052_p2 <= std_logic_vector(unsigned(tmp_46_cast_fu_2032_p4) + unsigned(ap_const_lv22_1));
    add_ln27_21_fu_906_p2 <= std_logic_vector(unsigned(tmp_49_cast_reg_2544) + unsigned(ap_const_lv21_1));
    add_ln27_22_fu_1907_p2 <= std_logic_vector(signed(sext_ln27_21_fu_1903_p1) + signed(sext_ln27_9_fu_1843_p1));
    add_ln27_23_fu_2095_p2 <= std_logic_vector(signed(sext_ln27_22_fu_2085_p1) + signed(sext_ln27_23_fu_2089_p1));
    add_ln27_24_fu_2105_p2 <= std_logic_vector(signed(sext_ln27_25_fu_2101_p1) + signed(sext_ln27_17_fu_2063_p1));
    add_ln27_2_fu_1443_p2 <= std_logic_vector(unsigned(tmp_s_fu_1407_p4) + unsigned(ap_const_lv23_1));
    add_ln27_3_fu_1238_p2 <= std_logic_vector(unsigned(tmp_19_cast_reg_2654) + unsigned(ap_const_lv22_1));
    add_ln27_4_fu_1268_p2 <= std_logic_vector(unsigned(tmp_22_cast_reg_2676) + unsigned(ap_const_lv21_1));
    add_ln27_5_fu_1756_p2 <= std_logic_vector(unsigned(select_ln27_15_fu_1749_p3) + unsigned(sext_ln27_1_fu_1727_p1));
    add_ln27_6_fu_1291_p2 <= std_logic_vector(unsigned(select_ln27_17_fu_1249_p3) + unsigned(sext_ln27_6_fu_1287_p1));
    add_ln27_7_fu_1776_p2 <= std_logic_vector(signed(sext_ln27_8_fu_1773_p1) + signed(sext_ln27_3_fu_1767_p1));
    add_ln27_9_fu_1821_p2 <= std_logic_vector(unsigned(tmp_25_cast_fu_1793_p4) + unsigned(ap_const_lv21_1));
    add_ln27_fu_1705_p2 <= std_logic_vector(unsigned(tmp_5_cast_fu_1677_p4) + unsigned(ap_const_lv21_1));
    and_ln142_1_fu_1085_p2 <= (xor_ln142_1_fu_1079_p2 and icmp_ln142_2_reg_2614);
    and_ln142_fu_1067_p2 <= (xor_ln142_fu_1061_p2 and icmp_ln142_1_fu_1031_p2);
    and_ln143_1_fu_2280_p2 <= (xor_ln143_1_fu_2274_p2 and icmp_ln143_2_reg_2930);
    and_ln143_fu_2262_p2 <= (xor_ln143_fu_2256_p2 and icmp_ln143_1_fu_2232_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_grp4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state21_pp0_stage0_iter1_grp4, ap_block_pp0_stage0_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage0_01001_grp4 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage0_iter1_grp4));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp1_done_reg_iter0, ap_block_state21_pp0_stage0_iter1_grp4, ap_block_pp0_stage0_subdone_grp4_done_reg, in_r_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage0_iter1_grp4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage0_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone_grp1_done_reg_iter0, in_r_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_11001_grp4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state21_pp0_stage0_iter1_grp4, ap_block_pp0_stage0_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage0_11001_grp4 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage0_iter1_grp4));
    end process;

        ap_block_pp0_stage0_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp1_done_reg_iter0, ap_block_state21_pp0_stage0_iter1_grp4, ap_block_pp0_stage0_subdone_grp4_done_reg, in_r_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage0_iter1_grp4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage0_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_grp1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone_grp1_done_reg_iter0, in_r_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone_grp1 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_grp4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state21_pp0_stage0_iter1_grp4, ap_block_pp0_stage0_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage0_subdone_grp4 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage0_iter1_grp4));
    end process;


    ap_block_pp0_stage10_01001_grp6_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage10_subdone_grp6_done_reg, ap_block_state31_pp0_stage10_iter1_grp6, ap_block_state51_pp0_stage10_iter2_grp6)
    begin
                ap_block_pp0_stage10_01001_grp6 <= (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state51_pp0_stage10_iter2_grp6)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage10_iter1_grp6)));
    end process;


    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage10_subdone_grp6_done_reg, ap_block_state31_pp0_stage10_iter1_grp6, ap_block_state51_pp0_stage10_iter2_grp6, regslice_both_out_r_U_apdone_blk)
    begin
                ap_block_pp0_stage10_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_out_r_U_apdone_blk = ap_const_logic_1) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_const_boolean_1 = ap_block_state51_pp0_stage10_iter2_grp6)))) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage10_iter1_grp6)));
    end process;

        ap_block_pp0_stage10_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_grp6_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage10_subdone_grp6_done_reg, ap_block_state31_pp0_stage10_iter1_grp6, ap_block_state51_pp0_stage10_iter2_grp6)
    begin
                ap_block_pp0_stage10_11001_grp6 <= (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state51_pp0_stage10_iter2_grp6)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage10_iter1_grp6)));
    end process;

        ap_block_pp0_stage10_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_grp6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage10_subdone_grp6_done_reg, ap_block_state31_pp0_stage10_iter1_grp6, ap_block_state51_pp0_stage10_iter2_grp6, regslice_both_out_r_U_apdone_blk)
    begin
                ap_block_pp0_stage10_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_out_r_U_apdone_blk = ap_const_logic_1) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_const_boolean_1 = ap_block_state51_pp0_stage10_iter2_grp6)))) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage10_iter1_grp6)));
    end process;

        ap_block_pp0_stage10_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_subdone_grp6_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage10_subdone_grp6_done_reg, ap_block_state31_pp0_stage10_iter1_grp6, ap_block_state51_pp0_stage10_iter2_grp6)
    begin
                ap_block_pp0_stage10_subdone_grp6 <= (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state51_pp0_stage10_iter2_grp6)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage10_iter1_grp6)));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage11_iter1_grp7)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage11_iter1_grp7));
    end process;

        ap_block_pp0_stage11_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_grp7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage11_iter1_grp7)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage11_iter1_grp7));
    end process;

        ap_block_pp0_stage11_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_grp2_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0_grp2)
    begin
                ap_block_pp0_stage1_01001_grp2 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp2));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0_grp2)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp2));
    end process;

        ap_block_pp0_stage1_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_grp2_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0_grp2)
    begin
                ap_block_pp0_stage1_11001_grp2 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp2));
    end process;

        ap_block_pp0_stage1_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0_grp2)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp2));
    end process;

        ap_block_pp0_stage1_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_grp3_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state3_pp0_stage2_iter0_grp3)
    begin
                ap_block_pp0_stage2_01001_grp3 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_grp3));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state3_pp0_stage2_iter0_grp3)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_grp3));
    end process;

        ap_block_pp0_stage2_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_grp3_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state3_pp0_stage2_iter0_grp3)
    begin
                ap_block_pp0_stage2_11001_grp3 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_grp3));
    end process;

        ap_block_pp0_stage2_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state3_pp0_stage2_iter0_grp3)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_grp3));
    end process;

        ap_block_pp0_stage2_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter1, temp2_empty_n)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (temp2_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage5_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_grp5_assign_proc : process(ap_enable_reg_pp0_iter1, temp2_empty_n)
    begin
                ap_block_pp0_stage5_11001_grp5 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (temp2_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage5_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_grp5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, temp2_empty_n)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (temp2_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage5_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_01001_grp8_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state50_pp0_stage9_iter2_grp8)
    begin
                ap_block_pp0_stage9_01001_grp8 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state50_pp0_stage9_iter2_grp8));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state50_pp0_stage9_iter2_grp8)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state50_pp0_stage9_iter2_grp8));
    end process;

        ap_block_pp0_stage9_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_grp8_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state50_pp0_stage9_iter2_grp8)
    begin
                ap_block_pp0_stage9_11001_grp8 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state50_pp0_stage9_iter2_grp8));
    end process;

        ap_block_pp0_stage9_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_grp8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state50_pp0_stage9_iter2_grp8)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state50_pp0_stage9_iter2_grp8));
    end process;

        ap_block_pp0_stage9_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_pp0_stage0_iter1_grp4_assign_proc : process(temp2_full_n, enable_echo_read_reg_2353)
    begin
                ap_block_state21_pp0_stage0_iter1_grp4 <= ((enable_echo_read_reg_2353 = ap_const_lv1_1) and (temp2_full_n = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_grp2_assign_proc : process(temp1_full_n, enable_distortion_read_reg_2357)
    begin
                ap_block_state2_pp0_stage1_iter0_grp2 <= (((enable_distortion_read_reg_2357 = ap_const_lv1_1) and (temp1_full_n = ap_const_logic_0)) or ((enable_distortion_read_reg_2357 = ap_const_lv1_0) and (temp1_full_n = ap_const_logic_0)));
    end process;


    ap_block_state31_pp0_stage10_iter1_grp6_assign_proc : process(enable_eq_read_reg_2349_pp0_iter1_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state31_pp0_stage10_iter1_grp6 <= ((enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state32_pp0_stage11_iter1_grp7_assign_proc : process(enable_eq_read_reg_2349_pp0_iter1_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state32_pp0_stage11_iter1_grp7 <= ((enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage2_iter0_grp3_assign_proc : process(temp2_full_n, temp1_empty_n, enable_echo_read_reg_2353)
    begin
                ap_block_state3_pp0_stage2_iter0_grp3 <= ((temp1_empty_n = ap_const_logic_0) or ((enable_echo_read_reg_2353 = ap_const_lv1_0) and (temp2_full_n = ap_const_logic_0)));
    end process;


    ap_block_state50_pp0_stage9_iter2_grp8_assign_proc : process(enable_eq_read_reg_2349_pp0_iter2_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state50_pp0_stage9_iter2_grp8 <= ((enable_eq_read_reg_2349_pp0_iter2_reg = ap_const_lv1_1) and (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state51_pp0_stage10_iter2_grp6_assign_proc : process(enable_eq_read_reg_2349_pp0_iter2_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state51_pp0_stage10_iter2_grp6 <= ((enable_eq_read_reg_2349_pp0_iter2_reg = ap_const_lv1_1) and (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_condition_995_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001_grp2)
    begin
                ap_condition_995 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_subdone, ap_enable_reg_pp0_iter0_reg)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_delay_index_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, delay_index, enable_echo_read_reg_2353, ap_block_pp0_stage0, grp_fu_719_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_echo_read_reg_2353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_delay_index_load <= grp_fu_719_p2;
        else 
            ap_sig_allocacmp_delay_index_load <= delay_index;
        end if; 
    end process;

    bitcast_ln716_fu_930_p1 <= grp_fu_607_p2;
    bitcast_ln725_fu_2135_p1 <= grp_fu_590_p2;
    delayed_sample_fu_745_p33 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_addr_reg_2409, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_addr_reg_2409;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1085_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1085_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_13_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_addr_reg_2414, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_addr_reg_2414;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1101_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1101_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_14_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_addr_reg_2419, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_addr_reg_2419;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1117_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1117_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_15_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_addr_reg_2424, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_addr_reg_2424;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1133_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1133_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_16_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_addr_reg_2429, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_addr_reg_2429;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1149_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1149_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_17_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_addr_reg_2434, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_addr_reg_2434;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1165_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1165_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_18_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_addr_reg_2439, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_addr_reg_2439;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1181_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1181_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_19_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_addr_reg_2444, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_addr_reg_2444;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1197_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1197_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_20_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_addr_reg_2449, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_addr_reg_2449;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1213_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1213_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_21_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_addr_reg_2404, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_address0_local <= echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_addr_reg_2404;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_ce0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1064_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1064_state20 = ap_const_boolean_1))) then 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_we0_local <= ap_const_logic_1;
        else 
            echo_stream_axis_sample_0_stream_axis_sample_0_bool_delay_buffer_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    enable_distortion_read_read_fu_328_p2 <= enable_distortion;

    grp_fu_590_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001_grp0, ap_block_pp0_stage5_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp0) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_590_ce <= ap_const_logic_1;
        else 
            grp_fu_590_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_590_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, mul_i23_i_reg_2889, ap_CS_fsm_pp0_stage16, grp_fu_590_p2, ap_block_pp0_stage2_grp0, ap_block_pp0_stage16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_590_p0 <= grp_fu_590_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            grp_fu_590_p0 <= mul_i23_i_reg_2889;
        else 
            grp_fu_590_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_590_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, grp_fu_595_p2, ap_CS_fsm_pp0_stage16, mul_i_i1_reg_2899, ap_block_pp0_stage2_grp0, ap_block_pp0_stage16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_590_p1 <= mul_i_i1_reg_2899;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            grp_fu_590_p1 <= grp_fu_595_p2;
        else 
            grp_fu_590_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_595_ce_assign_proc : process(ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then 
            grp_fu_595_ce <= ap_const_logic_1;
        else 
            grp_fu_595_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_595_p1_assign_proc : process(ap_enable_reg_pp0_iter1, gain_low_1_reg_2514_pp0_iter1_reg, gain_mid_1_reg_2524_pp0_iter1_reg, gain_high_1_reg_2534_pp0_iter1_reg, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
                grp_fu_595_p1 <= gain_high_1_reg_2534_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
                grp_fu_595_p1 <= gain_mid_1_reg_2524_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                grp_fu_595_p1 <= gain_low_1_reg_2514_pp0_iter1_reg;
            else 
                grp_fu_595_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_595_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_600_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001_grp0, ap_block_pp0_stage5_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage9_11001_grp0, ap_block_pp0_stage9_subdone_grp0_done_reg, ap_block_pp0_stage10_11001_grp0, ap_block_pp0_stage10_subdone_grp0_done_reg, ap_block_pp0_stage11_11001_grp0, ap_block_pp0_stage11_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone_grp0_done_reg) 
    and (ap_const_boolean_0 = ap_block_pp0_stage9_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_600_ce <= ap_const_logic_1;
        else 
            grp_fu_600_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_600_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, gain_low, gain_mid, gain_high, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, sext_ln65_fu_1913_p1, ap_CS_fsm_pp0_stage8, sext_ln65_1_fu_2058_p1, sext_ln65_2_fu_2117_p1, ap_block_pp0_stage0_grp0, ap_block_pp0_stage2_grp0, ap_block_pp0_stage9_grp0, ap_block_pp0_stage8, ap_block_pp0_stage1_grp0, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_600_p0 <= sext_ln65_2_fu_2117_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_600_p0 <= sext_ln65_1_fu_2058_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_600_p0 <= sext_ln65_fu_1913_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_600_p0 <= gain_high;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_600_p0 <= gain_mid;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_600_p0 <= gain_low;
        else 
            grp_fu_600_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_607_ce_assign_proc : process(ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then 
            grp_fu_607_ce <= ap_const_logic_1;
        else 
            grp_fu_607_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_611_ce_assign_proc : process(ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage9_11001_grp0, ap_block_pp0_stage9_subdone_grp0_done_reg, ap_block_pp0_stage10_11001_grp0, ap_block_pp0_stage10_subdone_grp0_done_reg, ap_block_pp0_stage11_11001_grp0, ap_block_pp0_stage11_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_611_ce <= ap_const_logic_1;
        else 
            grp_fu_611_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_617_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001_grp3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001_grp0, ap_block_pp0_stage5_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_617_ce <= ap_const_logic_1;
        else 
            grp_fu_617_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_617_p0_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, sext_ln31_fu_816_p1, ap_CS_fsm_pp0_stage2, sext_ln31_1_fu_833_p1, ap_block_pp0_stage1_grp0, ap_block_pp0_stage2_grp3)
    begin
        if ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_617_p0 <= sext_ln31_1_fu_833_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_617_p0 <= sext_ln31_fu_816_p1;
            else 
                grp_fu_617_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_617_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_719_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001_grp0, ap_block_pp0_stage5_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage9_11001_grp0, ap_block_pp0_stage9_subdone_grp0_done_reg, ap_block_pp0_stage10_11001_grp0, ap_block_pp0_stage10_subdone_grp0_done_reg, ap_block_pp0_stage11_11001_grp0, ap_block_pp0_stage11_subdone_grp0_done_reg, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) 
    and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_719_ce <= ap_const_logic_1;
        else 
            grp_fu_719_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_719_p0 <= std_logic_vector(unsigned(ap_sig_allocacmp_delay_index_load) + unsigned(ap_const_lv17_1));
    icmp_ln142_1_fu_1031_p2 <= "1" when (tmp_8_reg_2603 = ap_const_lv11_433) else "0";
    icmp_ln142_2_fu_984_p2 <= "1" when (signed(sub_ln142_fu_978_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln142_3_fu_990_p2 <= "1" when (signed(sub_ln142_fu_978_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln142_4_fu_1020_p2 <= "1" when (signed(sub_ln142_1_fu_1014_p2) < signed(ap_const_lv12_18)) else "0";
    icmp_ln142_fu_1026_p2 <= "1" when (trunc_ln142_reg_2593 = ap_const_lv63_0) else "0";
    icmp_ln143_1_fu_2232_p2 <= "1" when (tmp_24_reg_2919 = ap_const_lv8_96) else "0";
    icmp_ln143_2_fu_2185_p2 <= "1" when (signed(sub_ln143_fu_2175_p2) > signed(ap_const_lv9_0)) else "0";
    icmp_ln143_3_fu_2191_p2 <= "1" when (signed(sub_ln143_fu_2175_p2) < signed(ap_const_lv9_19)) else "0";
    icmp_ln143_4_fu_2221_p2 <= "1" when (signed(sub_ln143_1_fu_2215_p2) < signed(ap_const_lv9_18)) else "0";
    icmp_ln143_fu_2227_p2 <= "1" when (trunc_ln143_reg_2909 = ap_const_lv31_0) else "0";
    icmp_ln27_10_fu_925_p2 <= "0" when (trunc_ln27_10_reg_2573 = ap_const_lv12_0) else "1";
    icmp_ln27_11_fu_1994_p2 <= "0" when (tmp_20_fu_1986_p3 = ap_const_lv12_0) else "1";
    icmp_ln27_12_fu_2046_p2 <= "0" when (trunc_ln27_12_fu_2042_p1 = ap_const_lv12_0) else "1";
    icmp_ln27_13_fu_901_p2 <= "0" when (trunc_ln27_13_reg_2551 = ap_const_lv12_0) else "1";
    icmp_ln27_1_fu_1549_p2 <= "0" when (trunc_ln27_1_reg_2749 = ap_const_lv12_0) else "1";
    icmp_ln27_2_fu_1437_p2 <= "0" when (tmp_1_fu_1429_p3 = ap_const_lv12_0) else "1";
    icmp_ln27_3_fu_1203_p2 <= "0" when (trunc_ln27_3_reg_2661 = ap_const_lv12_0) else "1";
    icmp_ln27_4_fu_1263_p2 <= "0" when (trunc_ln27_4_reg_2683 = ap_const_lv12_0) else "1";
    icmp_ln27_5_fu_1815_p2 <= "0" when (trunc_ln27_5_fu_1811_p1 = ap_const_lv12_0) else "1";
    icmp_ln27_6_fu_1762_p2 <= "0" when (trunc_ln27_6_reg_2793 = ap_const_lv12_0) else "1";
    icmp_ln27_7_fu_1634_p2 <= "0" when (tmp_14_fu_1626_p3 = ap_const_lv12_0) else "1";
    icmp_ln27_8_fu_1335_p2 <= "0" when (trunc_ln27_8_reg_2710 = ap_const_lv12_0) else "1";
    icmp_ln27_9_fu_1497_p2 <= "0" when (trunc_ln27_9_reg_2732 = ap_const_lv12_0) else "1";
    icmp_ln27_fu_1699_p2 <= "0" when (trunc_ln27_fu_1695_p1 = ap_const_lv12_0) else "1";
    icmp_ln29_fu_637_p2 <= "1" when (signed(sext_ln29_fu_633_p1) > signed(hard_clip_level)) else "0";
    icmp_ln30_fu_665_p2 <= "1" when (signed(sext_ln30_fu_661_p1) < signed(sub_ln30_fu_655_p2)) else "0";

    in_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg_iter0, in_r_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int_regslice;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= regslice_both_in_r_U_ack_in;

    in_r_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone_grp1_done_reg_iter0, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    input_sample_data_2_fu_1531_p1 <= temp2_dout(24 - 1 downto 0);
    input_sample_data_fu_821_p1 <= temp1_dout(24 - 1 downto 0);
    lshr_ln142_fu_1004_p2 <= std_logic_vector(shift_right(unsigned(zext_ln142_1_fu_974_p1),to_integer(unsigned('0' & zext_ln142_2_fu_1000_p1(31-1 downto 0)))));
    lshr_ln143_fu_2201_p2 <= std_logic_vector(shift_right(unsigned(zext_ln143_1_cast_fu_2167_p3),to_integer(unsigned('0' & sext_ln143cast_fu_2197_p1(24-1 downto 0)))));
    lshr_ln_fu_683_p4 <= ap_sig_allocacmp_delay_index_load(15 downto 4);
    mul_ln27_10_fu_846_p1 <= ap_const_lv34_3FFFFFE66(10 - 1 downto 0);
    mul_ln27_1_fu_1387_p1 <= ap_const_lv35_266(11 - 1 downto 0);
    mul_ln27_2_fu_1183_p1 <= ap_const_lv35_266(11 - 1 downto 0);
    mul_ln27_3_fu_1211_p1 <= ap_const_lv34_199(10 - 1 downto 0);
    mul_ln27_4_fu_1788_p0 <= sext_ln27_reg_2803(24 - 1 downto 0);
    mul_ln27_4_fu_1788_p1 <= ap_const_lv34_3FFFFFE66(10 - 1 downto 0);
    mul_ln27_5_fu_1584_p1 <= ap_const_lv36_4CC(12 - 1 downto 0);
    mul_ln27_6_fu_1315_p1 <= ap_const_lv36_4CC(12 - 1 downto 0);
    mul_ln27_7_fu_1343_p1 <= ap_const_lv34_3FFFFFE66(10 - 1 downto 0);
    mul_ln27_8_fu_874_p1 <= ap_const_lv35_7FFFFFD99(11 - 1 downto 0);
    mul_ln27_9_fu_2026_p1 <= ap_const_lv35_7FFFFFD99(11 - 1 downto 0);
    mul_ln27_fu_1671_p1 <= ap_const_lv34_199(10 - 1 downto 0);
    or_ln142_fu_1073_p2 <= (icmp_ln142_fu_1026_p2 or icmp_ln142_1_fu_1031_p2);
    or_ln143_fu_2268_p2 <= (icmp_ln143_fu_2227_p2 or icmp_ln143_1_fu_2232_p2);

    out_r_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_grp6, enable_eq_read_reg_2349_pp0_iter1_reg, ap_block_pp0_stage10_subdone_grp6_done_reg, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_grp7, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_grp8, enable_eq_read_reg_2349_pp0_iter2_reg, out_r_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_grp8) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_grp7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage10_grp6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage10_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_TDATA_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage10, enable_eq_read_reg_2349_pp0_iter1_reg, ap_block_pp0_stage10_subdone_grp6_done_reg, ap_CS_fsm_pp0_stage9, enable_eq_read_reg_2349_pp0_iter2_reg, p_086_fu_2130_p1, zext_ln70_fu_2339_p1, ap_block_pp0_stage10_01001_grp6, ap_block_pp0_stage9_01001_grp8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9_01001_grp8) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            out_r_TDATA_int_regslice <= zext_ln70_fu_2339_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001_grp6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            out_r_TDATA_int_regslice <= p_086_fu_2130_p1;
        else 
            out_r_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_r_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage10, enable_eq_read_reg_2349_pp0_iter1_reg, ap_block_pp0_stage10_subdone_grp6_done_reg, ap_CS_fsm_pp0_stage9, enable_eq_read_reg_2349_pp0_iter2_reg, ap_block_pp0_stage10_11001_grp6, ap_block_pp0_stage9_11001_grp8)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001_grp8) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001_grp6) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone_grp6_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_eq_read_reg_2349_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    output_value_fu_1129_p3 <= 
        sub_ln142_2_fu_1123_p2 when (tmp_reg_2598(0) = '1') else 
        tmp_3_fu_1100_p11;
    p_086_fu_2130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_2122_p4),64));
    p_1_fu_725_p3 <= (sample_in_last_reg_2378 & sample_in_data_reg_2373);
    p_2_fu_1158_p3 <= (input_sample_last_reg_2504 & output_value_reg_2639);

    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_addr_reg_2454, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_address0_local <= p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_addr_reg_2454;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_ce0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1229_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1229_state20 = ap_const_boolean_1))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_we0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_10_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_addr_reg_2459, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_address0_local <= p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_addr_reg_2459;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_ce0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1245_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1245_state20 = ap_const_boolean_1))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_we0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_11_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_addr_reg_2464, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_address0_local <= p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_addr_reg_2464;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_ce0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1261_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1261_state20 = ap_const_boolean_1))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_we0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_12_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_addr_reg_2469, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_address0_local <= p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_addr_reg_2469;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_ce0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1277_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1277_state20 = ap_const_boolean_1))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_we0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_13_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_addr_reg_2474, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_address0_local <= p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_addr_reg_2474;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_ce0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1293_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1293_state20 = ap_const_boolean_1))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_we0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_14_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, echo_hls_stream_axis_sample_0_hls_stream_axis_sample_0_bool_delay_buffer_reg_2479, zext_ln28_fu_693_p1, ap_block_pp0_stage0, ap_block_pp0_stage19)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_address0_local <= echo_hls_stream_axis_sample_0_hls_stream_axis_sample_0_bool_delay_buffer_reg_2479;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_address0_local <= zext_ln28_fu_693_p1(12 - 1 downto 0);
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_address0_local <= "XXXXXXXXXXXX";
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_ce0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage19_11001, ap_predicate_pred1309_state20)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_predicate_pred1309_state20 = ap_const_boolean_1))) then 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_we0_local <= ap_const_logic_1;
        else 
            p_ZZ4echoRN3hls6streamI11axis_sampleLi0EEES3_bE12delay_buffer_15_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    p_s_fu_737_p3 <= (sample_in_last_reg_2378 & x_fu_732_p3);
    processed_sample_fu_2323_p3 <= 
        sub_ln143_2_fu_2317_p2 when (tmp_23_reg_2914(0) = '1') else 
        tmp_25_fu_2295_p11;
    sample_in_data_fu_621_p1 <= in_r_TDATA_int_regslice(24 - 1 downto 0);
    select_ln143_fu_2207_p3 <= 
        lshr_ln143_fu_2201_p2 when (icmp_ln143_3_fu_2191_p2(0) = '1') else 
        ap_const_lv24_0;
    select_ln27_10_fu_1719_p3 <= 
        select_ln27_fu_1711_p3 when (tmp_2_fu_1687_p3(0) = '1') else 
        tmp_5_cast_fu_1677_p4;
    select_ln27_11_fu_1890_p3 <= 
        add_ln27_18_fu_1885_p2 when (icmp_ln27_10_reg_2583(0) = '1') else 
        tmp_39_cast_reg_2566;
    select_ln27_12_fu_2006_p3 <= 
        add_ln27_19_fu_2000_p2 when (icmp_ln27_11_fu_1994_p2(0) = '1') else 
        tmp_18_fu_1964_p4;
    select_ln27_13_fu_2073_p3 <= 
        add_ln27_20_reg_2854 when (icmp_ln27_12_reg_2849(0) = '1') else 
        tmp_46_cast_reg_2843;
    select_ln27_14_fu_911_p3 <= 
        add_ln27_21_fu_906_p2 when (icmp_ln27_13_fu_901_p2(0) = '1') else 
        tmp_49_cast_reg_2544;
    select_ln27_15_fu_1749_p3 <= 
        select_ln27_1_fu_1743_p3 when (tmp_5_fu_1731_p3(0) = '1') else 
        tmp_11_cast_reg_2742;
    select_ln27_16_fu_1457_p3 <= 
        select_ln27_2_fu_1449_p3 when (tmp_6_fu_1417_p3(0) = '1') else 
        tmp_s_fu_1407_p4;
    select_ln27_17_fu_1249_p3 <= 
        select_ln27_3_fu_1243_p3 when (tmp_7_fu_1231_p3(0) = '1') else 
        tmp_19_cast_reg_2654;
    select_ln27_18_fu_1280_p3 <= 
        select_ln27_4_fu_1273_p3 when (tmp_9_fu_1256_p3(0) = '1') else 
        tmp_22_cast_reg_2676;
    select_ln27_19_fu_1835_p3 <= 
        select_ln27_5_fu_1827_p3 when (tmp_10_fu_1803_p3(0) = '1') else 
        tmp_25_cast_fu_1793_p4;
    select_ln27_1_fu_1743_p3 <= 
        add_ln27_1_fu_1738_p2 when (icmp_ln27_1_reg_2776(0) = '1') else 
        tmp_11_cast_reg_2742;
    select_ln27_20_fu_1865_p3 <= 
        select_ln27_6_fu_1859_p3 when (tmp_11_fu_1847_p3(0) = '1') else 
        tmp_29_cast_cast_reg_2786;
    select_ln27_21_fu_1654_p3 <= 
        select_ln27_7_fu_1646_p3 when (tmp_13_fu_1614_p3(0) = '1') else 
        tmp_12_fu_1604_p4;
    select_ln27_22_fu_1483_p3 <= 
        select_ln27_8_fu_1477_p3 when (tmp_15_fu_1465_p3(0) = '1') else 
        tmp_36_cast_cast_reg_2703;
    select_ln27_23_fu_1514_p3 <= 
        select_ln27_9_fu_1507_p3 when (tmp_16_fu_1490_p3(0) = '1') else 
        tmp_36_cast_reg_2725;
    select_ln27_24_fu_1896_p3 <= 
        select_ln27_11_fu_1890_p3 when (tmp_17_fu_1878_p3(0) = '1') else 
        tmp_39_cast_reg_2566;
    select_ln27_25_fu_2014_p3 <= 
        select_ln27_12_fu_2006_p3 when (tmp_19_fu_1974_p3(0) = '1') else 
        tmp_18_fu_1964_p4;
    select_ln27_26_fu_2078_p3 <= 
        select_ln27_13_fu_2073_p3 when (tmp_21_fu_2066_p3(0) = '1') else 
        tmp_46_cast_reg_2843;
    select_ln27_27_fu_918_p3 <= 
        select_ln27_14_fu_911_p3 when (tmp_22_fu_894_p3(0) = '1') else 
        tmp_49_cast_reg_2544;
    select_ln27_2_fu_1449_p3 <= 
        add_ln27_2_fu_1443_p2 when (icmp_ln27_2_fu_1437_p2(0) = '1') else 
        tmp_s_fu_1407_p4;
    select_ln27_3_fu_1243_p3 <= 
        add_ln27_3_fu_1238_p2 when (icmp_ln27_3_reg_2666(0) = '1') else 
        tmp_19_cast_reg_2654;
    select_ln27_4_fu_1273_p3 <= 
        add_ln27_4_fu_1268_p2 when (icmp_ln27_4_fu_1263_p2(0) = '1') else 
        tmp_22_cast_reg_2676;
    select_ln27_5_fu_1827_p3 <= 
        add_ln27_9_fu_1821_p2 when (icmp_ln27_5_fu_1815_p2(0) = '1') else 
        tmp_25_cast_fu_1793_p4;
    select_ln27_6_fu_1859_p3 <= 
        add_ln27_10_fu_1854_p2 when (icmp_ln27_6_reg_2813(0) = '1') else 
        tmp_29_cast_cast_reg_2786;
    select_ln27_7_fu_1646_p3 <= 
        add_ln27_11_fu_1640_p2 when (icmp_ln27_7_fu_1634_p2(0) = '1') else 
        tmp_12_fu_1604_p4;
    select_ln27_8_fu_1477_p3 <= 
        add_ln27_12_fu_1472_p2 when (icmp_ln27_8_reg_2715(0) = '1') else 
        tmp_36_cast_cast_reg_2703;
    select_ln27_9_fu_1507_p3 <= 
        add_ln27_13_fu_1502_p2 when (icmp_ln27_9_fu_1497_p2(0) = '1') else 
        tmp_36_cast_reg_2725;
    select_ln27_fu_1711_p3 <= 
        add_ln27_fu_1705_p2 when (icmp_ln27_fu_1699_p2(0) = '1') else 
        tmp_5_cast_fu_1677_p4;
        sext_ln142_2_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln142_1_reg_2629),32));

    sext_ln142_2cast_fu_1045_p1 <= sext_ln142_2_fu_1042_p1(24 - 1 downto 0);
        sext_ln142_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln142_fu_978_p2),32));

        sext_ln143_2_fu_2237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln143_1_reg_2940),32));

    sext_ln143_2cast_fu_2240_p1 <= sext_ln143_2_fu_2237_p1(24 - 1 downto 0);
        sext_ln143_fu_2181_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln143_fu_2175_p2),32));

    sext_ln143cast_fu_2197_p1 <= sext_ln143_fu_2181_p1(24 - 1 downto 0);
    sext_ln27_10_fu_1580_p0 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_3;
        sext_ln27_11_fu_1918_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_21_reg_2798),24));

    sext_ln27_12_fu_1311_p0 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_1;
        sext_ln27_14_fu_1521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_23_fu_1514_p3),23));

    sext_ln27_15_fu_870_p0 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_3;
        sext_ln27_16_fu_1921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln27_14_reg_2818),24));

        sext_ln27_17_fu_2063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_25_reg_2833),24));

    sext_ln27_18_fu_2022_p0 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_2;
        sext_ln27_19_fu_1924_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln27_15_reg_2759),24));

        sext_ln27_1_fu_1727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_10_fu_1719_p3),22));

    sext_ln27_20_fu_842_p0 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high_1;
        sext_ln27_21_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_24_fu_1896_p3),23));

        sext_ln27_22_fu_2085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_26_fu_2078_p3),23));

        sext_ln27_23_fu_2089_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_27_reg_2578),23));

        sext_ln27_24_fu_2092_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln27_22_reg_2823),24));

        sext_ln27_25_fu_2101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln27_23_fu_2095_p2),24));

    sext_ln27_2_fu_1383_p0 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_3;
        sext_ln27_3_fu_1767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_16_reg_2754),24));

    sext_ln27_4_fu_1179_p0 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_1;
        sext_ln27_6_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_18_fu_1280_p3),22));

        sext_ln27_7_fu_1770_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln27_5_reg_2808),24));

        sext_ln27_8_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln27_6_reg_2688),24));

        sext_ln27_9_fu_1843_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln27_19_fu_1835_p3),23));

        sext_ln27_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_sample_data_2_reg_2764),34));

        sext_ln29_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sample_in_data_fu_621_p1),32));

        sext_ln30_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_1_fu_647_p3),32));

        sext_ln31_1_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_sample_data_fu_821_p1),32));

        sext_ln31_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delayed_sample_fu_745_p35),32));

        sext_ln65_1_fu_2058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_1_fu_1933_p2),32));

        sext_ln65_2_fu_2117_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_2_fu_2111_p2),32));

        sext_ln65_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_fu_1782_p2),32));

    shl_ln142_fu_1049_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln142_2_reg_2608),to_integer(unsigned('0' & sext_ln142_2cast_fu_1045_p1(24-1 downto 0)))));
    shl_ln143_fu_2244_p2 <= std_logic_vector(shift_left(unsigned(zext_ln143_1_cast_reg_2924),to_integer(unsigned('0' & sext_ln143_2cast_fu_2240_p1(24-1 downto 0)))));
    sub_ln142_1_fu_1014_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sub_ln142_fu_978_p2));
    sub_ln142_2_fu_1123_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(tmp_3_fu_1100_p11));
    sub_ln142_fu_978_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln142_fu_954_p1));
    sub_ln143_1_fu_2215_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sub_ln143_fu_2175_p2));
    sub_ln143_2_fu_2317_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(tmp_25_fu_2295_p11));
    sub_ln143_fu_2175_p2 <= std_logic_vector(unsigned(ap_const_lv9_96) - unsigned(zext_ln143_fu_2159_p1));
    sub_ln30_fu_655_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(hard_clip_level));

    temp1_din_assign_proc : process(enable_distortion_read_reg_2357, p_1_fu_725_p3, p_s_fu_737_p3, ap_condition_995)
    begin
        if ((ap_const_boolean_1 = ap_condition_995)) then
            if ((enable_distortion_read_reg_2357 = ap_const_lv1_1)) then 
                temp1_din <= p_s_fu_737_p3;
            elsif ((enable_distortion_read_reg_2357 = ap_const_lv1_0)) then 
                temp1_din <= p_1_fu_725_p3;
            else 
                temp1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            temp1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp1_read_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001_grp3)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            temp1_read <= ap_const_logic_1;
        else 
            temp1_read <= ap_const_logic_0;
        end if; 
    end process;


    temp1_write_assign_proc : process(ap_enable_reg_pp0_iter0_reg, enable_distortion_read_reg_2357, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp2)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp2) and (enable_distortion_read_reg_2357 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp2) and (enable_distortion_read_reg_2357 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            temp1_write <= ap_const_logic_1;
        else 
            temp1_write <= ap_const_logic_0;
        end if; 
    end process;


    temp2_din_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, temp1_dout, enable_echo_read_reg_2353, ap_block_pp0_stage0_subdone_grp4_done_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001_grp3, p_2_fu_1158_p3, ap_block_pp0_stage0_01001_grp4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_echo_read_reg_2353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temp2_din <= p_2_fu_1158_p3;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001_grp3) and (enable_echo_read_reg_2353 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            temp2_din <= temp1_dout;
        else 
            temp2_din <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp2_read_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001_grp5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001_grp5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            temp2_read <= ap_const_logic_1;
        else 
            temp2_read <= ap_const_logic_0;
        end if; 
    end process;


    temp2_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0_reg, enable_echo_read_reg_2353, ap_block_pp0_stage0_subdone_grp4_done_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001_grp3, ap_block_pp0_stage0_11001_grp4)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp3) and (enable_echo_read_reg_2353 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (enable_echo_read_reg_2353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp2_write <= ap_const_logic_1;
        else 
            temp2_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_1803_p3 <= mul_ln27_4_fu_1788_p2(33 downto 33);
    tmp_11_fu_1847_p3 <= mul_ln27_5_reg_2781(35 downto 35);
    tmp_12_fu_1604_p4 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_2(23 downto 1);
    tmp_13_fu_1614_p3 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_2(23 downto 23);
    tmp_14_fu_1626_p3 <= (trunc_ln27_7_fu_1622_p1 & ap_const_lv11_0);
    tmp_15_fu_1465_p3 <= mul_ln27_6_reg_2698(35 downto 35);
    tmp_16_fu_1490_p3 <= mul_ln27_7_reg_2720(33 downto 33);
    tmp_17_fu_1878_p3 <= mul_ln27_8_reg_2561(34 downto 34);
    tmp_18_fu_1964_p4 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high(23 downto 1);
    tmp_19_fu_1974_p3 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high(23 downto 23);
    tmp_1_fu_1429_p3 <= (trunc_ln27_2_fu_1425_p1 & ap_const_lv11_0);
    tmp_20_fu_1986_p3 <= (trunc_ln27_11_fu_1982_p1 & ap_const_lv11_0);
    tmp_21_fu_2066_p3 <= mul_ln27_9_reg_2838(34 downto 34);
    tmp_22_fu_894_p3 <= mul_ln27_10_reg_2539(33 downto 33);
    tmp_24_fu_2151_p3 <= bitcast_ln725_fu_2135_p1(30 downto 23);
    tmp_25_cast_fu_1793_p4 <= mul_ln27_4_fu_1788_p2(32 downto 12);
    tmp_25_fu_2295_p10 <= ((icmp_ln143_fu_2227_p2 & and_ln143_fu_2262_p2) & and_ln143_1_fu_2280_p2);
    tmp_25_fu_2295_p8 <= 
        shl_ln143_fu_2244_p2 when (icmp_ln143_4_reg_2945(0) = '1') else 
        ap_const_lv24_0;
    tmp_25_fu_2295_p9 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_26_fu_2330_p4 <= ((input_sample_last_1_reg_2770_pp0_iter2_reg & ap_const_lv8_0) & processed_sample_fu_2323_p3);
    tmp_2_fu_1687_p3 <= mul_ln27_fu_1671_p2(33 downto 33);
    tmp_3_fu_1100_p10 <= ((icmp_ln142_fu_1026_p2 & and_ln142_fu_1067_p2) & and_ln142_1_fu_1085_p2);
    tmp_3_fu_1100_p6 <= 
        trunc_ln142_3_reg_2624 when (icmp_ln142_3_reg_2619(0) = '1') else 
        ap_const_lv24_0;
    tmp_3_fu_1100_p8 <= 
        shl_ln142_fu_1049_p2 when (icmp_ln142_4_reg_2634(0) = '1') else 
        ap_const_lv24_0;
    tmp_3_fu_1100_p9 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_46_cast_fu_2032_p4 <= mul_ln27_9_fu_2026_p2(33 downto 12);
    tmp_4_fu_2122_p4 <= ((input_sample_last_1_reg_2770 & ap_const_lv8_0) & input_sample_data_2_reg_2764);
    tmp_5_cast_fu_1677_p4 <= mul_ln27_fu_1671_p2(32 downto 12);
    tmp_5_fu_1731_p3 <= mul_ln27_1_reg_2737(34 downto 34);
    tmp_6_fu_1417_p3 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_2(23 downto 23);
    tmp_7_fu_1231_p3 <= mul_ln27_2_reg_2649(34 downto 34);
    tmp_8_fu_946_p3 <= bitcast_ln716_fu_930_p1(62 downto 52);
    tmp_9_fu_1256_p3 <= mul_ln27_3_reg_2671(33 downto 33);
    tmp_s_fu_1407_p4 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_2(23 downto 1);
    trunc_ln142_1_fu_958_p1 <= bitcast_ln716_fu_930_p1(52 - 1 downto 0);
    trunc_ln142_2_fu_962_p1 <= bitcast_ln716_fu_930_p1(24 - 1 downto 0);
    trunc_ln142_3_fu_1010_p1 <= lshr_ln142_fu_1004_p2(24 - 1 downto 0);
    trunc_ln142_fu_934_p1 <= bitcast_ln716_fu_930_p1(63 - 1 downto 0);
    trunc_ln143_1_fu_2163_p1 <= bitcast_ln725_fu_2135_p1(23 - 1 downto 0);
    trunc_ln143_fu_2139_p1 <= bitcast_ln725_fu_2135_p1(31 - 1 downto 0);
    trunc_ln27_10_fu_890_p1 <= mul_ln27_8_fu_874_p2(12 - 1 downto 0);
    trunc_ln27_11_fu_1982_p1 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_high(1 - 1 downto 0);
    trunc_ln27_12_fu_2042_p1 <= mul_ln27_9_fu_2026_p2(12 - 1 downto 0);
    trunc_ln27_13_fu_862_p1 <= mul_ln27_10_fu_846_p2(12 - 1 downto 0);
    trunc_ln27_1_fu_1403_p1 <= mul_ln27_1_fu_1387_p2(12 - 1 downto 0);
    trunc_ln27_2_fu_1425_p1 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_low_2(1 - 1 downto 0);
    trunc_ln27_3_fu_1199_p1 <= mul_ln27_2_fu_1183_p2(12 - 1 downto 0);
    trunc_ln27_4_fu_1227_p1 <= mul_ln27_3_fu_1211_p2(12 - 1 downto 0);
    trunc_ln27_5_fu_1811_p1 <= mul_ln27_4_fu_1788_p2(12 - 1 downto 0);
    trunc_ln27_6_fu_1600_p1 <= mul_ln27_5_fu_1584_p2(12 - 1 downto 0);
    trunc_ln27_7_fu_1622_p1 <= eq_3band_stream_stream_axis_sample_0_bool_float_float_float_delay_mid_2(1 - 1 downto 0);
    trunc_ln27_8_fu_1331_p1 <= mul_ln27_6_fu_1315_p2(12 - 1 downto 0);
    trunc_ln27_9_fu_1359_p1 <= mul_ln27_7_fu_1343_p2(12 - 1 downto 0);
    trunc_ln27_fu_1695_p1 <= mul_ln27_fu_1671_p2(12 - 1 downto 0);
    trunc_ln28_fu_679_p1 <= ap_sig_allocacmp_delay_index_load(4 - 1 downto 0);
    trunc_ln29_fu_643_p1 <= hard_clip_level(24 - 1 downto 0);
    x_1_fu_647_p3 <= 
        trunc_ln29_fu_643_p1 when (icmp_ln29_fu_637_p2(0) = '1') else 
        sample_in_data_fu_621_p1;
    x_2_fu_671_p1 <= sub_ln30_fu_655_p2(24 - 1 downto 0);
    x_fu_732_p3 <= 
        x_2_reg_2394 when (icmp_ln30_reg_2389(0) = '1') else 
        x_1_reg_2384;
    xor_ln142_1_fu_1079_p2 <= (or_ln142_fu_1073_p2 xor ap_const_lv1_1);
    xor_ln142_fu_1061_p2 <= (icmp_ln142_fu_1026_p2 xor ap_const_lv1_1);
    xor_ln143_1_fu_2274_p2 <= (or_ln143_fu_2268_p2 xor ap_const_lv1_1);
    xor_ln143_fu_2256_p2 <= (icmp_ln143_fu_2227_p2 xor ap_const_lv1_1);
    zext_ln142_1_cast_fu_966_p3 <= (ap_const_lv1_1 & trunc_ln142_1_fu_958_p1);
    zext_ln142_1_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln142_1_cast_fu_966_p3),54));
    zext_ln142_2_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln142_fu_996_p1),54));
    zext_ln142_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_946_p3),12));
    zext_ln143_1_cast_fu_2167_p3 <= (ap_const_lv1_1 & trunc_ln143_1_fu_2163_p1);
    zext_ln143_fu_2159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_2151_p3),9));
    zext_ln28_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_683_p4),64));
    zext_ln70_fu_2339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_2330_p4),64));
end behav;
